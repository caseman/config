# Casey's Aliases

alias -g L='| less'
alias -g LL='2>&1 | less'
alias -g G='| grep'
alias -g GG='2>&1 | grep'
alias -g T='| tee'
alias -g TT='2>&1 | tee'
alias -g XV='| xargs nvim'
alias -g V='| nvim -'
alias -g VV='2>&1 | nvim -'
alias -g HD='| head'
alias -g TL='| tail'
alias -g NUL='> /dev/null 2>&1'
alias -g F='| fzf'
alias -g C='| cut -f1 -d'
alias -g B='| bat --color always --plain'
alias -g XB='| xargs bat --color always --plain'
alias -g U='| up'
alias -g UU='2>&1 | up'

alias x='chmod +x'
alias ll='ls -lh'
alias la='ls -AF'
alias ls='ls -F'
md() {
    mkdir -p "$1" && pushd "$1"
}
c() {
	pushd "$1" && ls -F
}

# Git
git-branch-fzf() {
    git --no-pager branch -vv --sort='-committerdate:iso8601' \
    | fzf +m --preview="git --no-pager log --abbrev-commit -5 {1} | bat --color always --plain" \
    | awk '{print $1}'
}
git-stash-fzf() {
	git --no-pager stash list | sed 's/: / /' \
    | fzf +m --preview-window='top:75%' \
    	     --preview='git stash show {1} && echo "---" && git --no-pager stash show --color=always -p {1}' \
    | cut -f1 -d ' '
}
git-status-fzf() {
    git --no-pager status -s | fzf -m --preview='git diff {2}' | awk '{print $2}'
}
git-log-fzf() {
    git --no-pager log --oneline \
    | fzf +m --preview-window='top:75%' --preview='git show --color=always {1}' | awk '{print $1}'
}

tags() {
    ctags -R -f ~/.cache/tags \
       ~/cbhq/monorepo/brokerage \
       ~/cbhq/monorepo/pro \
       ~/cbhq/moonbase/db/support \
       ~/cbhq/moonbase/go-db \
       ~/cbhq/moonbase/rates \
       ~/cbhq/payments \
       2>/dev/null
}

alias gfu='git fetch upstream && git checkout master && git merge upstream/master && git prunelocal && tags'
alias grbfp='git fetch upstream && git rebase upstream/master && git push -f'
alias grb='git fetch upstream && git rebase upstream/master'
alias gbr='git-branch-fzf | xargs git checkout'
alias gpsup='git push --set-upstream origin $(git-branch-current)'
alias gdob='git diff origin/$(git-branch-current)...$(git-branch-current)'
alias gcm='git checkout master'
alias gcmu='git checkout master && gup && tags'
alias gcob='git checkout -b'
alias gst='git status'
alias gss='git status -s'
alias gstatus='git-status-fzf | xargs git'
alias gstash='git-stash-fzf | xargs git stash'
alias glog='git-log-fzf | xargs git'
alias gs='git stash -u'
alias ga='git add -A'
alias gcd='cd $(git-root)'
alias gmod='(gcd; git checkout go.mod go.sum)'
alias git-diff-name-only-abs='git diff --name-only --line-prefix=$(git rev-parse --show-toplevel)/'
alias gchanged='(git-diff-name-only-abs master... && git-diff-name-only-abs) | sort -u'
alias gmerge='git fetch origin master && git merge origin master && git push'
alias ghurl="git config --get remote.origin.url | sed -e 's/.*@//' -e 's/.git$//' -e 's/:/\//'"
alias prs='open "https://$(ghurl)/pulls"'
alias mprs='open "https://$(ghurl)/pulls/$USER"'
alias ish='open "https://$(ghurl)/issues"'
alias gh='open "https://$(ghurl)"'
gbdp() {
    BRANCH="${$1:-$(git-branch-current)}"
    git checkout master && \
    git branch --delete $BRANCH && \
    git push origin --delete $BRANCH
}
gac() {
    git-status-fzf | xargs git add && git commit --verbose
}

goog() {
    Q=$(python -c "import urllib; print urllib.quote(raw_input())" <<< "$@") && \
    /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome \
        "https://www.google.com/search?q=$Q" --new-window NUL
}

alias pd='popd >/dev/null'
alias psg='ps awx | grep'
alias grep='egrep'
alias rgrep='egrep -r'
alias tf='tail -F'
alias ymd='date +%Y%m%d'

redis-del() {
    PATTERN=${@:$#}
    OPTIONS=${@:1:-1}
    eval "redis-cli $OPTIONS KEYS '$PATTERN' | xargs redis-cli $OPTIONS DEL"
}

alias h='history'
alias src='source  ~/.zshrc'
namedir() { eval $1=\"$PWD\" ;  : ~$1 }
alias debugzsh='zsh -xv |& ts "%.S"'

dbr() { 
    tag="$(basename $(pwd))-test"
    echo "build and run: $tag"
    docker build -t "$tag" . && docker run --rm "$tag" $@
}

dkill() {
    tag="$(basename $(pwd))-test"
    id="$(docker ps -q --filter ancestor="$tag")"
    if [ "$id" != "" ]; then
        echo -n "kill container image $tag "
        docker kill "$id"
    else
        echo "No running container for $tag"
    fi
}

gup() {
    find . -type d -name ".git" | while read dir; do
        echo "--- Updating $(dirname $dir)"
        (cd $dir/../ && git up && git prunelocal)
    done
}

# vi: ft=zsh

